# replace ls with exa
alias ls='exa'
alias ll='ls -lh'
alias la='ls -lha'

# always mk complete path
alias mkdir='mkdir -p'

# pretty top
alias top='htop'

alias dev='cd ~/Development'
# always use nvim
alias vim='nvim'
# directly edit neovim config
alias nvc='cd ~/.config/nvim && nvim'

alias grep='rg'
# alias cat='bat'
alias lg='lazygit'

# power management
alias off='systemctl poweroff'
alias restart='systemctl reboot'

# sql connections
alias mysql-local='mariadb -uroot -ppassword -h127.0.0.1'
alias mysql-prod="mariadb --disable-ssl-verify-server-cert -uphil -p$GCP_MYSQL_PROD_PASS -h127.0.0.1 -P3307"
# alias mysql-prod='mariadb --disable-ssl-verify-server-cert -uroot -p -h127.0.0.1 -P3307'
# opens port to connect to cloud-sql at localhost:3307
alias mysql-prod-port-forward="~/Tools/cloud-sql-proxy/cloud-sql-proxy --address 0.0.0.0 --port 3307 aitastic-data:europe-west3:operator-index"
alias mysql-test-port-forward="~/Tools/cloud-sql-proxy/cloud-sql-proxy --address 0.0.0.0 --port 3308 aitastic-test-2:europe-west3:operator-index"

# development apps in docker
export DOCKER_APPS_DIR='/home/phil/Development/docker-configs'
alias docker-elastic="docker compose -f $DOCKER_APPS_DIR/elasticsearch-single-node-dev/docker-compose.yml"
alias docker-mysql="docker compose -f $DOCKER_APPS_DIR/mysql/docker-compose.yml"
alias docker-redis="docker compose -f $DOCKER_APPS_DIR/redis/docker-compose.yml"

# taskwarrior / timewarrior
alias todo='task'
alias tis='timew summary :id'
alias tisy='timew summary :id :yesterday'
alias tisw='timew summary :id :week'
alias tisl='timew summary :id :lastweek'
alias tism='timew summary :id :month'

# processor development
alias rundevproc='export KAFKA_PROCESSOR_CONFIG_PATH="config/config_dev.ini" && colorize_stderr poetry run python'
alias rundevmod='export KAFKA_PROCESSOR_CONFIG_PATH="config/config_dev.ini" && colorize_stderr poetry run python -m'

# workaround scripts media monitoring
alias similarweb="cd ~/Development/scripts-and-configs/workarounds/similar_web_metrics"

alias source-tracker="cd ~/Development/scripts-and-configs/workarounds/source-tracker"
alias opoint-source-checker="poetry run opoint-source-checker check-list domains.txt --es-password=${ES_PROD_PASS} --opoint-token=${OPOINT_TOKEN}"

# Xbox controller enter pairing mode
alias xbox-pair="echo 1 | sudo tee /sys/bus/usb/drivers/xone-dongle/*/pairing"
alias xbox-pair-stop="echo 0 | sudo tee /sys/bus/usb/drivers/xone-dongle/*/pairing"

# Hyprland HDR
# empty fields mean don't adjust
alias hdr-on="hyprctl keyword monitor \"DP-1,3440x1440@100,0x0,1,bitdepth,10,cm,hdr,sdrbrightness,1.2,sdrsaturation,0.98\""
alias hdr-off="hyprctl keyword monitor \"DP-1,3440x1440@100,0x0,1,bitdepth,8\""

##########################################
# FUNCTIONS                              #
##########################################
docker_ip() {
    # prints out the IPAddress of the container with name $1, requires 1 positional argument
    docker inspect $1 | jq '.[0].NetworkSettings.Networks' | grep 'IPAddress' 
}


download_es_doc() {
    # downloads a document from prod-Elasticsearch into a JSON-file based on it's ID
    ID=$1
    if [[ -z $ID ]]; then
        echo "You need to set a ID! e.g. download_es_doc 42d1a1c7a2526959bf79c2439ef186a2e4753f1a203b1b7efa3b8f8b6b39e32f"
        return 1
    fi
    http -a $ELASTICSEARCH_AUTH "https://es.aitastic.com/newsstand/_search?q=_id:$ID" | jq > $ID.json
}

colorize_stderr() {
    # colorizes stderr-output of the following command in RED
    # e.g. colorize_stderr $command
    local RED="\033[0;31m"
    local NO_COLOR="\033[0m" # Keine Farbe

    "$@" 2> >(while read -r line; do
        # FÃ¤rben Sie stderr rot
        echo -e "${RED}${line}${NO_COLOR}"
    done)
}

tds() {
    local date="$1"
    if [[ -z "$date" ]]; then
        echo "Date required as parameter. E.g. `tds 2025-04-01`"
        return 1
    fi
    local start="${date}T00:00:00"
    local end="$(date -d "$date + 1 day" +%Y-%m-%d)T00:00:00"
    timew summary $start - $end
}

